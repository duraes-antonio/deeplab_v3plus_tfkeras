# trained model, inference results, visualised images will be saved in model_dir
model_dir: /content/logs

label_file_path: pascal_voc_label.csv
n_extra_channels: 0
train_x_dirs:
    - /content/drive/MyDrive/dataset/576x576/custom_576x576_75_15_10_transf-morf_sem-causa/train
train_extra_x_dirs:

train_y_dirs:
    - /content/drive/MyDrive/dataset/576x576/custom_576x576_75_15_10_transf-morf_sem-causa/train_gt

valid_x_dirs:
    - /content/drive/MyDrive/dataset/576x576/custom_576x576_75_15_10_transf-morf_sem-causa/val

valid_extra_x_dirs:


valid_y_dirs:
    - /content/drive/MyDrive/dataset/576x576/custom_576x576_75_15_10_transf-morf_sem-causa/val_gt

# below is to inference and visualise.
test_x_dirs:
    - /content/drive/MyDrive/dataset/576x576/custom_576x576_75_15_10_transf-morf_sem-causa/test
#if you don't use the value, write "~" like below, or don't define it.
#test_x_dirs: ~

# test_extra_x_dirs:

# test_y_dirs:
#     - path/to/test_y_dir1

which_to_inference:
    #- train
    #- valid
    - test
which_to_visualise:
    #- train
    #- valid
    - test

# below is training setting
# choose one for output_activation.
# softmax: one pixel belong to one category.
# sigmoid: one pixel can belong to two or more categories.
output_activation: softmax
batch_size: 4
n_epochs: 10
use_devices: "0" # if you want to do distributed learning, write like "0,1,2".
image_size: [576,576]
optimizer: Adam #Adam or Nadam or SGD

# if batch_size is very small, consider to use batch renorm.
# use_batch_renorm: True

# Choose one for loss function.
# CE: cross entropy
# FL: focal loss
# GDL: generalized dice loss
loss: CE

# Choose one fore metrics
# IoU: Intersection over Union. Jaccard index.
# F1score  : F1score. F measure. Dice coefficient.
metrics: F1score

# True, if you want to check metrics for each label.
check_categorical_metrics: True

# True or False
use_tensorboard: True
# default is model_dir
tensorboard_dir: /home/taniguchi-j/tensorboard

